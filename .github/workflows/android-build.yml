name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 3. Set up Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 34
          build-tools-version: 34.0.0
          target: android-34

      # 4. Install Gradle 8.0.2 manually
      - name: Install Gradle 8.0.2
        run: |
          curl -sSL https://services.gradle.org/distributions/gradle-8.0.2-bin.zip -o gradle-8.0.2.zip
          unzip -q gradle-8.0.2.zip
          mv gradle-8.0.2 /opt/gradle
          echo "PATH=/opt/gradle/bin:$PATH" >> $GITHUB_ENV

      # 5. Ensure wrapper files are present, otherwise download them
      - name: Download Gradle Wrapper files if missing
        run: |
          if [ ! -f gradle/wrapper/gradle-wrapper.jar ] || [ ! -f gradle/wrapper/gradle-wrapper.properties ]; then
            echo "Downloading missing Gradle wrapper files..."
            mkdir -p gradle/wrapper

            # Download gradle-wrapper.jar from the official Gradle GitHub
            curl -L https://raw.githubusercontent.com/gradle/gradle/master/subprojects/wrapper/src/main/resources/gradle-wrapper.jar -o gradle/wrapper/gradle-wrapper.jar

            # Download gradle-wrapper.properties from the official Gradle GitHub
            curl -L https://raw.githubusercontent.com/gradle/gradle/master/subprojects/wrapper/src/main/resources/gradle-wrapper.properties -o gradle/wrapper/gradle-wrapper.properties

            echo "Gradle wrapper files have been downloaded."
          else
            echo "Gradle wrapper files found, skipping download."
          fi

      # 6. Make gradlew executable
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # 7. Set Android environment variables
      - name: Set Android environment variables
        run: |
          echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "PATH=$ANDROID_SDK_ROOT/emulator:$ANDROID_SDK_ROOT/tools:$ANDROID_SDK_ROOT/tools/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH" >> $GITHUB_ENV

      # 8. Check Gradle version (debugging)
      - name: Check Gradle version
        run: ./gradlew --version

      # 9. Clean the app module
      - name: Clean app module
        run: ./gradlew :app:clean

      # 10. Build Debug APK for the app module
      - name: Build Debug APK
        run: ./gradlew :app:assembleDebug --stacktrace --info --no-daemon

      # 11. List all APKs to verify
      - name: List APKs after build
        run: find . -type f -name "*.apk"

      # 12. Upload APKs as artifact
      - name: Upload APKs
        uses: actions/upload-artifact@v4
        with:
          name: debug-apks
          path: '**/build/outputs/**/*.apk'

name: Android CI (Fin-Traq Mobile App)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-android:
    runs-on: ubuntu-latest
    name: Build Android APK
    env:
      FIN_TRAQ_API_KEY: ${{ secrets.API_KEY }}
    steps:
      # 1. Checkout (Use your specific token for multi-repo if needed, otherwise default)
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          path: .
          
      # 2. Set up JDK 17
      # Note: We rely on the gradle/actions/setup-gradle for cache management below.
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 3. CRITICAL: Use the Official Gradle Action (Handles Wrapper, Permissions, and Cache)
      - name: Setup Gradle Environment
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.6
          # The action will create/manage the wrapper and permissions automatically.

      # 4. Build Steps (These now rely on the correct environment setup above)
      - name: Clean Build
        run: ./gradlew clean --stacktrace --no-daemon

      - name: Run Unit Tests (Including API Auth Tests)
        run: ./gradlew testDebugUnitTest --stacktrace --no-daemon

      - name: Build Debug APK with API_BASE_URL
        run: ./gradlew assembleDebug --stacktrace --no-daemon -PapiBaseUrl="${{ secrets.API_BASE_URL }}"
          
      # ... (Artifact Uploads remain unchanged)
      - name: Upload Gradle logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: gradle-build-logs
          path: build-log.txt
          
      - name: Debug: List APK files
        run: |
          echo "Listing all APKs in repo:"
          find . -type f -name "*.apk"
          
      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-apk
          path: app/build/outputs/apk/**/*.apk

      - name: Upload APK to GitHub Release
        if: success() && startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: app/build/outputs/apk/**/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

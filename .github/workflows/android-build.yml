name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      
          gradle wrapper --gradle-version 8.4
          git add gradle/wrapper/gradle-wrapper.jar gradle/wrapper/gradle-wrapper.properties gradlew gradlew.bat
          git commit -m "Upgrade Gradle wrapper to 8.4"
          git push
          
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
          
      - name: Clear Android Emulator SDK cache
        run: rm -rf $ANDROID_SDK_ROOT/emulator

        # 3. Set up Android SDK & NDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          sdk: 34
          ndk: 25.2.9519653 # if needed

      - name: Set up Android SDK command-line tools
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 'latest'  # or specify a version like '12.0'

      - name: Install required SDK packages
        run: |
          sdkmanager "platforms;android-34" "build-tools;34.0.0" "platform-tools" "ndk;25.2.9519653"
          yes | sdkmanager --licenses

      - name: Accept Android SDK licenses
        run: yes | sdkmanager --licenses
        
      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Create Room schema folder
        run: mkdir -p app/schemas
        
      - name: Check Gradle Version
        run: ./gradlew --version

      # Generate placeholder ic_launcher icons
      - name: Ensure ic_launcher.png exists
        run: |
          sudo apt-get update && sudo apt-get install -y imagemagick
          for d in mdpi hdpi xhdpi xxhdpi xxxhdpi; do
            mkdir -p app/src/main/res/mipmap-$d
            if [ ! -f app/src/main/res/mipmap-$d/ic_launcher.png ]; then
              convert -size 48x48 xc:blue app/src/main/res/mipmap-$d/ic_launcher.png
            fi
          done

      # Generate missing strings.xml and themes.xml
      - name: Ensure basic resources exist
        run: |
          mkdir -p app/src/main/res/values

          if [ ! -f app/src/main/res/values/strings.xml ]; then
          cat > app/src/main/res/values/strings.xml <<'EOF'
          <resources>
          <string name="app_name">FinanceApp</string>
          </resources>
          EOF
            fi

          if [ ! -f app/src/main/res/values/themes.xml ]; then
          cat > app/src/main/res/values/themes.xml <<'EOF'
          <resources xmlns:tools="http://schemas.android.com/tools">
          <style name="Theme.FinanceApp" parent="Theme.Material3.DayNight.NoActionBar">
          <item name="colorPrimary">@android:color/holo_blue_light</item>
          <item name="colorPrimaryDark">@android:color/holo_blue_dark</item>
          <item name="colorAccent">@android:color/holo_orange_light</item>
          </style>
          </resources>
          EOF
            fi
      # This is the new step you need to add
      - name: Clean Build
        run: ./gradlew clean

      - name: Build Debug APK with log capture
        run: |
          ./gradlew assembleDebug --stacktrace --debug --no-daemon --info 2>&1 | tee build-log.txt
      - name: Find and Upload APK
        if: success() # Only run this step if the previous one succeeded
        run: |
          find app/build/outputs/apk/ -type f -name "*.apk"
          # ... (your upload artifact step here)

      - name: List all files under build folder
        run: ls -R app/build/
      - name: Find APK files
        run: find app/build/outputs/apk/ -type f -name "*.apk"

      - name: Upload Gradle logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: gradle-build-logs
          path: gradle-build.log
          
      - name: Debug:List APK files
        run: ls -R app/build/outputs/apk || echo "No APK files found"

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/**/*.apk

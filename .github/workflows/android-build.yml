name: Android CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build-android: # New, Corrected key job for building android
    runs-on: ubuntu-latest
    name: Build Android APK
    env:
      GRADLE_BUILD_ACTION_CACHE_KEY_PREFIX: v2
      FIN_TRAQ_API_KEY: ${{ secrets.API_KEY }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          path: .
       

      - name: Generate Gradle Wrapper
        run: gradle wrapper --gradle-version 8.6 --gradle-distribution-sha256-sum 9631d53cf3e74bfa726893aee1f8994fee4e060c401335946dba2156f440f24c
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle



      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.6
   

      # The gradle/actions/setup-gradle action handles caching automatically,

      # so we've removed the redundant caching step.
      
      # Now, we will force a clean build to resolve any lingering issues

      - name: Clean Build
        run: ./gradlew clean --stacktrace --no-daemon

      - name: Run Unit Tests (Including API Auth Tests)
        run: ./gradlew testDebugUnitTest --stacktrace --no-daemon

      - name: Build Debug APK with API_BASE_URL
        run: ./gradlew assembleDebug --stacktrace --no-daemon -PapiBaseUrl="${{ secrets.API_BASE_URL }}"

        # NEW STEP: Print the log contents ONLY if the build step failed
      # - name: Print Gradle Log on Failure
       # if: always() # Use always() to run this step even if the previous one failed
        # run: |
         # echo "--- START OF GRADLE BUILD LOG ---"
          # Check if the log file exists and print it
         # if [ -f "build-log.txt" ]; then
        #    cat build-log.txt
        #  else
         #   echo "build-log.txt not found."
        #  fi
        #  echo "--- END OF GRADLE BUILD LOG ---"
              

      - name: Upload Gradle logs (on failure)

        if: failure()

        uses: actions/upload-artifact@v4

        with:

          name: gradle-build-logs

          path: build-log.txt

          

      - name: Debug:List APK files

        run: |

          echo "Listing all APKs in repo:"

          find . -type f -name "*.apk"

        

      - name: Upload APK

        if: success()

        uses: actions/upload-artifact@v4

        with:

          name: app-apk

          path: app/build/outputs/apk/**/*.apk



      - name: Upload APK to GitHub Release

        if: success() && startsWith(github.ref, 'refs/tags/')

        uses: softprops/action-gh-release@v1

        with:

          files: app/build/outputs/apk/**/*.apk

        env:

          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}





 # ----------------------------------------------------

  # JOB 2: DEPLOY FIREBASE FUNCTIONS (Continuous Deployment)

  # ----------------------------------------------------

  

  deploy-backend:

    name: Deploy Categorization Backend

    # Only run this job if the Android build succeeds

    needs: build-android 

    runs-on: ubuntu-latest



    

    # Crucial: Only deploy the live backend when merging/pushing directly to 'main'

    # if: github.event_name == 'push' && github.ref == 'refs/heads/main' 

    env:

      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      FIREBASE_PROJECT_ID: ${{ secrets.Firebase_Project_ID }}

      

    steps:

      - uses: actions/checkout@v3

        with:

          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}

          path: .



      - name: Set up Node.js

        uses: actions/setup-node@v3

        with:

          node-version: '20' # Recommended Node.js version for Firebase Functions 

          

      - name: Install Firebase CLI

        run: |

          npm install firebase-tools@latest

          npx firebase --version # ✅ Use npx to avoid global pollution



      # consider removing the following steps for security as per prior advice
